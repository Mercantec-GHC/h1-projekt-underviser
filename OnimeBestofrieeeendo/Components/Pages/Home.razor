@page "/"
@using Npgsql
@using Microsoft.AspNetCore.Components.Forms
@inject IJSRuntime JsRuntime
@inject IConfiguration Configuration
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations;
@using OnimeBestofrieeeendo.Components.Services
@inject ContactService ContactService


<!-- ==================== –ì–õ–ê–í–ù–ê–Ø –°–ï–ö–¶–ò–Ø ==================== -->
<!-- –≠—Ç–æ —Ç–∏–ø–∞ –æ–±–ª–æ–∂–∫–∞ —Å–∞–π—Ç–∞, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è  -->
<section id="home" class="section">
    <div class="container">
        
        <div class="hero-content">
            <h1 class="animated-logo">
                <img src="/images/logo.svg" alt="The Onime World" />
            </h1>
            
            <h2
                class="animated-logo2">
                <img src="/images/logo1.svg" alt="The Onime World" />
            </h2>

            <p class="lead"></p> <!-- –°—é–¥–∞ –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å /–ø—Ä–∏–≤–µ—Ç -->
            <button class="btn btn-primary" @onclick="@(() => ScrollToSection("products"))">ShopIt</button>
            
        </div>
        
    </div>
</section>

<!-- ==================== –°–ï–ö–¶–ò–Ø –¢–û–í–ê–†–û–í ==================== -->

<section id="products" class="section">
    <div class="container-full">
        <div class="products-wrapper">
            <div class="products-grid">
                @foreach (var product in _shopProducts)
                {
                    <div class="product-card">
                        <div class="product-image-wrapper">
                            <img src="@product.ImageUrl" alt="@product.Name" />
                        </div>
                        <div class="product-info">
                            <h3 class="product-title">@product.Name</h3>
                            <span class="product-price">@product.Price DKK</span>
                            <div class="product-actions">
                                <button class="btn-add-cart" @onclick="() => BuyProduct(product)">K√∏be</button>
                                <button class="btn-read-more" @onclick="() => ShowProductDetails(product)">Beskrivelse</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>


<!-- ==================== –ü–û–ü-–ê–ü –° –ò–ù–§–û–ò==================== -->
<!-- –≠—Ç–æ —Ç–∏–ø–∞ –æ–∫–æ—à–∫–æ, –≥–¥–µ –±–æ–ª—å—à–µ –∏–Ω—Ñ—ã –ø—Ä–æ —à–º–æ—Ç–∫—É -->
@if (_selectedProduct != null)
{
    <div class="modal-overlay" @onclick="CloseModal">
        <!-- –ö–ª–∏–∫–Ω—É–ª –Ω–∞ —Ñ–æ–Ω ‚Äî –æ–∫–æ—à–∫–æ –∑–∞–∫—Ä—ã–ª–æ—Å—å -->
        <div class="modal-content" @onclick:stopPropagation>
            <!-- –ê –≤–Ω—É—Ç—Ä–∏ –∫–ª–∏–∫–∞–µ—à—å ‚Äî –∏ –æ–Ω–æ –Ω–µ –∏—Å—á–µ–∑–∞–µ—Ç -->
            <button class="close-btn" @onclick="CloseModal">X</button>
            <h3>@_selectedProduct.Name</h3>
            <p>@_selectedProduct.Description</p>
            <p>–°–∫–æ–ª—å–∫–æ –µ—Å—Ç—å: @_selectedProduct.Quantity</p>
        </div>
    </div>
}

<!-- ==================== –°–ï–ö–¶–ò–Ø –ö–ê–¢–ï–ì–û–†–ò–ô ==================== -->
<!-- –¢—É—Ç —Ç–∏–ø–∞ –≥—Ä—É–ø–ø—ã —à–º–æ—Ç–æ–∫, –∫–∞–∫ —Ñ–∏–ª—å—Ç—Ä—ã -->
<section id="categories" class="section">
    <div class="container">
        <h2>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h2>
        <div class="categories-grid">
            <div class="category-card">
                <h3>Nye varer</h3>
                <p>New Arrivals</p>
            </div>
            <div class="category-card">
                <h3>Popular</h3>
                <p>Your Choice</p>
            </div>
            <div class="category-card">
                <h3>Sale</h3>
                <p>Sale 50%</p>
            </div>
        </div>
    </div>
</section>

<!-- ==================== –°–ï–ö–¶–ò–Ø –ü–†–û–§–ò–õ–Ø ==================== -->
<!-- –≠—Ç–æ —Ç–≤–æ—è —Å—Ç—Ä–∞–Ω–∏—á–∫–∞, –≥–¥–µ –≤—Å—è –∏–Ω—Ñ–∞ –ø—Ä–æ —Ç–µ–±—è -->
<section id="profile" class="section profile-section">
    <div class="container">
        <h2>Min Profil</h2>

        @if (_currentUserProfile != null)
        {
            <div class="profile-container">
                <div class="profile-avatar">
                    <!-- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–≤–æ—é —Ñ–æ—Ç–∫—É –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—É—é, –µ—Å–ª–∏ —Ñ–æ—Ç–∫–∏ –Ω–µ—Ç -->
                    <img src="@GetAvatarUrl(_currentUserProfile)" alt="@_currentUserProfile.Username" />
                    <div class="profile-level">
                        <span>LVL @_currentUserProfile.Level</span>
                    </div>
                </div>
                <div class="profile-info">
                    <div class="profile-username">
                        <h3>@_currentUserProfile.Username</h3>
                        <span class="profile-status">Online</span>
                    </div>
                    <div class="profile-stats">
                        <div class="stat-item">
                            <span class="stat-label">Rank:</span>
                            <span class="stat-value">@_currentUserProfile.Role</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">Online:</span>
                            <span class="stat-value">@_currentUserProfile.JoinDate.ToShortDateString()</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">Saldo:</span>
                            <span class="stat-value">@_currentUserProfile.Balance DKK</span>
                        </div>
                    </div>
                    <div class="profile-bio">
                        <p>@_currentUserProfile.Bio</p>
                    </div>
                </div>
            </div>
        }
        else
        {
            <p>–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞—à—ë–ª, —Å–æ—Ä—è–Ω.</p>
        }
    </div>
</section>


<!-- ==================== –°–ï–ö–¶–ò–Ø –ö–û–ù–¢–ê–ö–¢–´ –ò –û –ù–ê–° ==================== -->
<section id="contact" class="section contact-section">
    <div class="container">
        <div class="section-header">
            <h2 class="contact-title">Avoid us or risk it!</h2>
            <div class="header-line"></div>
        </div>
        
        <div class="contact-grid">
            <!-- –ö–æ–ª–æ–Ω–∫–∞ –û –Ω–∞—Å -->
            <div class="contact-column about-us-column">
                <div class="contact-card">
                    <h3 class="card-title">Our Stand</h3>
                    <div class="about-content">
                        <p>Onime ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–∞–≥–∞–∑–∏–Ω –æ–¥–µ–∂–¥—ã, —ç—Ç–æ —Ü–µ–ª–∞—è –≤—Å–µ–ª–µ–Ω–Ω–∞—è —Å—Ç–∏–ª—è.</p>
                        <p>–ú—ã –æ—Ç–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ –ª—É—á—à–∏–µ –≤–µ—â–∏ –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏ —Å–æ–∑–¥–∞–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–∏–∑–∞–π–Ω—ã, —á—Ç–æ–±—ã —Ç—ã –≤—Å–µ–≥–¥–∞ –≤—ã–≥–ª—è–¥–µ–ª –Ω–µ–æ—Ç—Ä–∞–∑–∏–º–æ.</p>
                        <p class="highlight-text">Only cool clothes from trusted dudes.</p>
                    </div>
                    <div class="brand-values">
                        <div class="value-item">
                            <div class="value-icon">üöÄ</div>
                            <p>–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π —Å—Ç–∏–ª—å</p>
                        </div>
                        <div class="value-item">
                            <div class="value-icon">‚ö°</div>
                            <p>–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</p>
                        </div>
                        <div class="value-item">
                            <div class="value-icon">üíØ</div>
                            <p>–ü—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–æ</p>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –ö–æ–ª–æ–Ω–∫–∞ –ö–æ–Ω—Ç–∞–∫—Ç—ã -->
            <div class="contact-column contact-info-column">
                <div class="contact-card">
                    <h3 class="card-title">Avoid us or do it</h3>
                    <div class="contact-methods">
                        <a href="mailto:support@onime.com" class="contact-method">
                            <div class="method-icon">üìß</div>
                            <div class="method-details">
                                <span class="method-label">Email</span>
                                <span class="method-value">support@onime.com</span>
                            </div>
                        </a>
                        <a href="https://t.me/onimeshop" class="contact-method">
                            <div class="method-icon">üí¨</div>
                            <div class="method-details">
                                <span class="method-label">Telegram</span>
                                <span class="method-value">Onimeshop</span>
                            </div>
                        </a>
                        <a href="tel:+4571234567" class="contact-method">
                            <div class="method-icon">üì±</div>
                            <div class="method-details">
                                <span class="method-label">My Digit</span>
                                <span class="method-value">+45 7123 4567</span>
                            </div>
                        </a>
                    </div>
                    
                    <div class="social-media">
                        <h4>Our Soul</h4>
                        <div class="social-icons">
                            <a href="https://instagram.com/onimeshop" class="social-icon">
                                <i class="fab fa-instagram"></i>
                            </a>
                            <a href="https://tiktok.com/onimeshop" class="social-icon">
                                <i class="fab fa-tiktok"></i>
                            </a>
                            <a href="https://facebook.com/onimeshop" class="social-icon">
                                <i class="fab fa-facebook"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –ö–æ–ª–æ–Ω–∫–∞ FAQ -->
            <div class="contact-column faq-column">
                <div class="contact-card">
                    <h3 class="card-title">Brain Boost Zone</h3>
                    <div class="faq-container">
                        <div class="faq-item">
                            <button class="faq-question" @onclick="() => ToggleFaq(0)">
                                –ö–∞–∫ –¥–æ–ª–≥–æ –∏–¥—ë—Ç –¥–æ—Å—Ç–∞–≤–∫–∞?
                                <span class="faq-icon">@(expandedFaqIndex == 0 ? "‚àí" : "+")</span>
                            </button>
                            <div class="faq-answer @(expandedFaqIndex == 0 ? "expanded" : "")">
                                –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –î–∞–Ω–∏–∏ –∑–∞–Ω–∏–º–∞–µ—Ç 1-3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è. –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ ‚Äî 7-14 –¥–Ω–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞–Ω—ã.
                            </div>
                        </div>
                        <div class="faq-item">
                            <button class="faq-question" @onclick="() => ToggleFaq(1)">
                                –ú–æ–∂–Ω–æ –ª–∏ –≤–µ—Ä–Ω—É—Ç—å —Ç–æ–≤–∞—Ä?
                                <span class="faq-icon">@(expandedFaqIndex == 1 ? "‚àí" : "+")</span>
                            </button>
                            <div class="faq-answer @(expandedFaqIndex == 1 ? "expanded" : "")">
                                –î–∞, –≤ —Ç–µ—á–µ–Ω–∏–µ 14 –¥–Ω–µ–π. –¢–æ–≤–∞—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –∏–¥–µ–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å –±–∏—Ä–∫–∞–º–∏.
                            </div>
                        </div>
                        <div class="faq-item">
                            <button class="faq-question" @onclick="() => ToggleFaq(2)">
                                –ö–∞–∫ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–≤–æ–π —Ä–∞–∑–º–µ—Ä?
                                <span class="faq-icon">@(expandedFaqIndex == 2 ? "‚àí" : "+")</span>
                            </button>
                            <div class="faq-answer @(expandedFaqIndex == 2 ? "expanded" : "")">
                                –¢–∞–±–ª–∏—Ü–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞. –ï—Å–ª–∏ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, –≤—ã–±–∏—Ä–∞–π—Ç–µ –±√≥–ª—å—à–∏–π —Ä–∞–∑–º–µ—Ä.
                            </div>
                        </div>
                        <div class="faq-item">
                            <button class="faq-question" @onclick="() => ToggleFaq(3)">
                                –ì–¥–µ –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç—Å—è –≤–∞—à–∏ —Ç–æ–≤–∞—Ä—ã?
                                <span class="faq-icon">@(expandedFaqIndex == 3 ? "‚àí" : "+")</span>
                            </button>
                            <div class="faq-answer @(expandedFaqIndex == 3 ? "expanded" : "")">
                                –ú—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ–º —Å –ª—É—á—à–∏–º–∏ —Ñ–∞–±—Ä–∏–∫–∞–º–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É, —É–¥–µ–ª—è—è –æ—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤—É –∏ —ç—Ç–∏—á–Ω–æ–º—É –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- –§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ -->
            <div class="contact-form-container">
                <div class="contact-card form-card">
                    <h3 class="card-title">–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º</h3>
                    <EditForm Model="contactForm" OnValidSubmit="SubmitContactForm" class="contact-form">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="form-row">
                            <div class="form-group">
                                <label for="name">Name</label>
                                <InputText id="name" class="form-control" @bind-Value="contactForm.Name" placeholder="Enter your Stand...or name."/>
                            </div>
                            <div class="form-group">
                                <label for="email">Email</label>
                                <InputText id="email" type="email" class="form-control" @bind-Value="contactForm.Email" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"/>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="subject">Subject</label>
                            <InputText id="subject" class="form-control" @bind-Value="contactForm.Subject" placeholder="–¢–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"/>
                        </div>
                        <div class="form-group">
                            <label for="message">Message</label>
                            <InputTextArea id="message" class="form-control" @bind-Value="contactForm.Message" rows="4" placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"/>
                        </div>
                        <button type="submit" class="btn-submit">Send</button>
                    </EditForm>
                </div>
            </div>
            
        </div>
        
    </div>
</section>


@code {
    private int expandedFaqIndex = -1;
    
    private ContactFormModel contactForm = new ContactFormModel();
    
    private void ToggleFaq(int index)
    {
        expandedFaqIndex = (expandedFaqIndex == index) ? -1 : index;
    }
    
    private async Task SubmitContactForm()
    {
        try
        {
            await ContactService.SaveContactAsync(contactForm);

            await JsRuntime.InvokeVoidAsync("showFunnyPopup", "Thank you!", "Your message has been sent. We will contact you soon, but remember ‚Äî my STAND is \"The World\".");

            contactForm = new ContactFormModel();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            await JsRuntime.InvokeVoidAsync("showFunnyPopup", "Error", "Something went wrong. Please try again later.");
            Console.WriteLine(ex.Message);
        }
    }
    
    public class ContactFormModel
    {
        [Required(ErrorMessage = "Haha, are you ashamed to enter your name? Come on, show me your stand!")]
        public string Name { get; set; } = "";
        
        [Required(ErrorMessage = "Email! Give me your email!!!")]
        [EmailAddress(ErrorMessage = "Invalid email format")]
        public string Email { get; set; } = "";
        
        [Required(ErrorMessage = "Subject is required, bro!")]
        public string Subject { get; set; } = "";
        
        [Required(ErrorMessage = "Is that all you can do? Just say what you really want ‚Äî write your own text already!")]
        public string Message { get; set; } = "";
    }

    private async Task BuyProduct(ShopProductView product)
    {
        if (_currentUserProfile == null)
            return;

        if (_currentUserProfile.Balance < product.Price)
        {
            await JsRuntime.InvokeVoidAsync("showFunnyPopup", "Oops! Not enough money ü§∑‚Äç‚ôÇÔ∏è", "Go sell your soul or start hustling, buddy!");
            return;
        }

        try
        {
            var connString = Configuration.GetConnectionString("DefaultConnection");

            using var conn = new NpgsqlConnection(connString);
            await conn.OpenAsync();

            using var transaction = await conn.BeginTransactionAsync();

            // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
            using var cmdUpdateUser = new NpgsqlCommand(
                "UPDATE users SET balance = balance - @price WHERE id = @userId", conn, transaction);
            cmdUpdateUser.Parameters.AddWithValue("@price", product.Price);
            cmdUpdateUser.Parameters.AddWithValue("@userId", _currentUserProfile.Id);
            await cmdUpdateUser.ExecuteNonQueryAsync();

            // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
            using var cmdUpdateProduct = new NpgsqlCommand(
                "UPDATE shop_items SET quantity = quantity - 1 WHERE shop_item_id = @shopItemId", conn, transaction);
            cmdUpdateProduct.Parameters.AddWithValue("@shopItemId", product.ShopItemId);
            await cmdUpdateProduct.ExecuteNonQueryAsync();

            await transaction.CommitAsync();

            await JsRuntime.InvokeVoidAsync("showFunnyPopup", "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º üéâ", $"–¢—ã –∫—É–ø–∏–ª: {product.Name}!");

            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            _shopProducts = await LoadProductAsync();
            _currentUserProfile.Balance -= product.Price;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ: " + ex.Message);
            await JsRuntime.InvokeVoidAsync("showFunnyPopup", "–û—à–∏–±–∫–∞ üòµ", "–ü–æ–∫—É–ø–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.");
        }
    }
    // ==================== –ù–ê–®–ò –®–ú–û–¢–ö–ò –ò –î–ê–ù–ù–´–ï ====================
    // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —à–º–æ—Ç–æ–∫ –≤ –º–∞–≥–∞–∑–µ
    private List<ShopProductView> _shopProducts = new();
    // –í—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ —é–∑–µ—Ä–æ–≤
    private List<UserProfile> _profiles = new();
    // –ê–π–¥–∏—à–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞, –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ 1
    private int _currentUserId = 1;
    // –ü—Ä–æ—Ñ–∏–ª—å —Ç–æ–≥–æ, –∫—Ç–æ —Å–µ–π—á–∞—Å —Å–º–æ—Ç—Ä–∏—Ç
    private UserProfile? _currentUserProfile;
    // –®–º–æ—Ç–∫–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã–±—Ä–∞–ª–∏ –¥–ª—è –ø–æ–ø-–∞–ø–∞
    private ShopProductView? _selectedProduct;

    // ==================== –§–£–ù–ö–¶–ò–ò ====================
    // –°–∫—Ä–æ–ª–ª–∏—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫ –Ω—É–∂–Ω–æ–º—É –º–µ—Å—Ç—É
    private async Task ScrollToSection(string sectionId)
    {
        // –î–µ–ª–∞–µ–º –ø–ª–∞–≤ÔøΩÔøΩ—ã–π —Å–∫—Ä–æ–ª–ª —á–µ—Ä–µ–∑ JavaScript, –ø–æ—Ç–æ–º—É —á—Ç–æ Blazor —Å–∞–º –Ω–µ —É–º–µ–µ—Ç
        await JsRuntime.InvokeVoidAsync("scrollToSection", sectionId);
    }

    // –ì—Ä—É–∑–∏–º –≤—Å—ë, –∫–æ–≥–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // –¢–∞—â–∏–º –ø—Ä–æ—Ñ–∏–ª–∏ –∏–∑ –±–∞–∑—ã
            _profiles = await LoadProfilesAsync();
            // –ò—â–µ–º –Ω–∞—à –ø—Ä–æ—Ñ–∏–ª—å –ø–æ –∞–π–¥–∏
            _currentUserProfile = _profiles.FirstOrDefault(p => p.Id == _currentUserId);

            // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ—Ç, –¥–µ–ª–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–π
            if (_currentUserProfile == null)
            {
                _currentUserProfile = new UserProfile
                {
                    Id = 15,
                    Username = "–î–µ–º–æ –ß–µ–ª",
                    Email = "demo@example.com",
                    JoinDate = DateTime.Now.AddDays(-100),
                    Balance = 10000,
                    Role = "–î–µ–º–æ",
                    AvatarUrl = "/images/default-avatar.jpg",
                    Level = 100,
                    Bio = "–≠—Ç–æ –¥–µ–º–∫–∞, –±–∞–∑–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞"
                };
            }
        }
        catch (Exception ex)
        {
            // –ï—Å–ª–∏ –±–∞–∑–∞ —É–ø–∞–ª–∞, –ø–∏—à–µ–º –æ—à–∏–±–∫—É –∏ –¥–µ–ª–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
            Console.WriteLine($"–ß—ë-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å: {ex.Message}");
            _currentUserProfile = new UserProfile
            {
                Id = 1,
                Username = "–û—à–∏–±–∫–∞ –ß–µ–ª",
                Email = "error@example.com",
                JoinDate = DateTime.Now,
                Balance = 999,
                Role = "–û—à–∏–±–∫–∞",
                AvatarUrl = "/images/default-avatar.jpg",
                Level = 1,
                Bio = $"–ß—ë-—Ç–æ –Ω–µ –≥—Ä—É–∑–∏—Ç—Å—è: {ex.Message}"
            };
        }
        // –ì—Ä—É–∑–∏–º —à–º–æ—Ç–∫–∏
        _shopProducts = await LoadProductAsync();
    }

    // –ü–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ–¥–∏—Ç –≤ –±–∞–∑—É –∑–∞ –¥–∞–Ω–Ω—ã–º–∏
    private async Task<List<T>> ExecuteQueryAsync<T>(string sql, Func<NpgsqlDataReader, T> mapFunction)
    {
        // –°–ø–∏—Å–æ–∫, –∫—É–¥–∞ —Å–∫–ª–∞–¥—ã–≤–∞–µ–º —à–º–æ—Ç–∫–∏ –∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª–∏
        var resultList = new List<T>();
        // –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ
        var connString = Configuration.GetConnectionString("DefaultConnection");

        try
        {
            // –°–æ–µ–¥–∏–Ω—è–µ–º—Å—è —Å –±–∞–∑–æ–π
            using var conn = new NpgsqlConnection(connString);
            await conn.OpenAsync();
            // –ö–∏–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å
            using var cmd = new NpgsqlCommand(sql, conn);
            // –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç
            using var reader = await cmd.ExecuteReaderAsync();
            // –ö–∞–∂–¥—É—é —Å—Ç—Ä–æ—á–∫—É –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤ —à—Ç—É–∫—É
            while (await reader.ReadAsync())
            {
                resultList.Add(mapFunction(reader));
            }
        }
        catch (Exception ex)
        {
            // –ï—Å–ª–∏ –≤—Å—ë —Å–ª–æ–º–∞–ª–æ—Å—å, –ø–∏—à–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å
            Console.WriteLine($"–ë–∞–∑–∞ –æ—Ç–≤–∞–ª–∏–ª–∞—Å—å: {ex.Message}");
        }
        return resultList;
    }

    // –¢–∞—â–∏–º —à–º–æ—Ç–∫–∏ –∏–∑ –±–∞–∑—ã
    private async Task<List<ShopProductView>> LoadProductAsync()
    {
        // –ó–∞–ø—Ä–æ—Å, —á—Ç–æ–± –¥–æ—Å—Ç–∞—Ç—å –≤—Å–µ —à–º–æ—Ç–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å
        string sql = @"
            SELECT shop_items.shop_item_id,
                   shop_items.item_id,
                   products.name,
                   products.image_url,
                   products.description,
                   shop_items.price,
                   shop_items.quantity
            FROM shop_items
            JOIN products ON shop_items.item_id = products.id
            WHERE shop_items.available = true";

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–º–æ—â–Ω–∏–∫–∞, —á—Ç–æ–± –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —à–º–æ—Ç–∫–∏
        return await ExecuteQueryAsync(sql, reader => new ShopProductView
        {
            ShopItemId = reader.GetInt32(0),
            ItemId = reader.GetInt32(1),
            Name = reader.GetString(2),
            ImageUrl = reader.GetString(3),
            Description = reader.GetString(4),
            Price = reader.GetDecimal(5),
            Quantity = reader.GetInt32(6)
        });
    }

    // –¢–∞—â–∏–º –ø—Ä–æ—Ñ–∏–ª–∏ –∏–∑ –±–∞–∑—ã
    private async Task<List<UserProfile>> LoadProfilesAsync()
    {
        // –ó–∞–ø—Ä–æ—Å, —á—Ç–æ–± –≤–∑—è—Ç—å –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏
        string sql = @"
            SELECT u.id, u.username, u.email, u.join_date, u.balance, u.role,
                   p.avatar_url, p.level, p.bio
            FROM users u
            JOIN profiles p ON u.id = p.user_id";

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–º–æ—â–Ω–∏–∫–∞, —á—Ç–æ–± —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏
        return await ExecuteQueryAsync(sql, reader => new UserProfile
        {
            Id = reader.GetInt32(0),
            Username = reader.GetString(1),
            Email = reader.GetString(2),
            JoinDate = reader.GetDateTime(3),
            Balance = reader.GetDecimal(4),
            Role = reader.GetString(5),
            AvatarUrl = reader.IsDBNull(6) ? null : reader.GetString(6),
            Level = reader.GetInt32(7),
            Bio = reader.IsDBNull(8) ? null : reader.GetString(8)
        });
    }

    // –†–µ—à–∞–µ–º, –∫–∞–∫—É—é —Ñ–æ—Ç–∫—É –ø–æ–∫–∞–∑–∞—Ç—å –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è
    private string GetAvatarUrl(UserProfile profile)
    {
        // –ï—Å–ª–∏ —Ñ–æ—Ç–∫–∏ –Ω–µ—Ç, –±–µ—Ä—ë–º –¥–µ—Ñ–æ–ª—Ç–Ω—É—é
        if (string.IsNullOrEmpty(profile.AvatarUrl))
        {
            return "/images/default-avatar.jpg";
        }

        // –î–µ–ª–∞–µ–º –ø—É—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º
        var avatarPath = profile.AvatarUrl.StartsWith("/") ? profile.AvatarUrl : "/" + profile.AvatarUrl;
        var fullPath = System.IO.Path.Combine(System.IO.Directory.GetCurrentDirectory(), "wwwroot", avatarPath.TrimStart('/'));

        // –ï—Å–ª–∏ —Ñ–∞–π–ª –µ—Å—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ, –∏–Ω–∞—á–µ –¥–µ—Ñ–æ–ª—Ç
        return System.IO.File.Exists(fullPath) ? avatarPath : "/images/default-avatar.jpg";
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø-–∞–ø —Å –∏–Ω—Ñ–æ–π –ø—Ä–æ —à–º–æ—Ç–∫—É
    private void ShowProductDetails(ShopProductView product)
    {
        _selectedProduct = product;
    }

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø-–∞–ø
    private void CloseModal()
    {
        _selectedProduct = null;
    }

    // ==================== –ö–õ–ê–°–°–´ –î–õ–Ø –î–ê–ù–ù–´–• ====================
    // –ü—Ä–æ—Ñ–∏–ª—å —é–∑–µ—Ä–∞
    public class UserProfile
    {
        public int Id { get; set; }
        public string Username { get; set; } = "";
        public string Email { get; set; } = "";
        public DateTime JoinDate { get; set; }
        public decimal Balance { get; set; }
        public string Role { get; set; } = "";
        public string? AvatarUrl { get; set; }
        public int Level { get; set; }
        public string? Bio { get; set; }
    }

    // –®–º–æ—Ç–∫–∞ –∏–∑ –º–∞–≥–∞–∑–∞
    public class ShopProductView
    {
        public int ShopItemId { get; set; }
        public int ItemId { get; set; }
        public string Name { get; set; } = "";
        public string ImageUrl { get; set; } = "";
        public string Description { get; set; } = "";
        public decimal Price { get; set; }
        public int Quantity { get; set; }
    }
}