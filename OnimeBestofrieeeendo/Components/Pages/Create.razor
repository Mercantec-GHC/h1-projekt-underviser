@page "/create"
@inject NavigationManager Navigation
@using OnimeBestofrieeeendo.Models
@layout MyLayout
@inject DbService DbService


<style>

    body {
        background: #f7f7fa;
        font-family: 'Segoe UI', Arial, sans-serif;
        color: #222;
    }

    #CreateForm {
        background: #fff;
        border-radius: 14px;
        box-shadow: 0 4px 24px rgba(0,0,0,0.10);
        max-width: 420px;
        margin: 10px auto 24px auto;
        padding: 32px 28px 24px 28px;
        display: flex;
        flex-direction: column;
        gap: 18px;
    }

    #msg {
        text-align: center;
        font-size: 1.6rem;
        font-weight: 700;
        margin-top: 10px;
        color: #333;
    }

    #CreateForm label {
        font-size: 1rem;
        font-weight: 500;
        color: #444;
        margin-bottom: 6px;
        display: block;
    }

    #CreateForm input,
    #CreateForm select {
        width: 100%;
        padding: 8px 10px;
        border: 1px solid #cfd8dc;
        border-radius: 6px;
        font-size: 1rem;
        margin-top: 4px;
        margin-bottom: 8px;
        background: #f9f9fb;
        transition: border-color 0.2s;
    }

        #CreateForm input:focus,
        #CreateForm select:focus {
            border-color: #59CCCC;
            outline: none;
        }

    #CreateForm [type="radio"] {
        width: auto;
        margin-right: 6px;
    }

    #CreateForm button[type="submit"] {
        background: #59CCCC;
        color: #1e1e1e;
        border: none;
        border-radius: 8px;
        padding: 10px 0;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        margin-top: 10px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        transition: background 0.2s, color 0.2s;
    }

        #CreateForm button[type="submit"]:hover {
            background: #48bbbb;
            color: #fff;
        }

    @@media (max-width: 600px) {
        html, body

        {
            overflow-y: auto;
        }

        #CreateForm {
            max-width: 98vw;
            padding: 18px 6vw 16px 6vw;
        }

        #msg {
            font-size: 1.2rem;
            margin-top: 20px;
        }

        }
</style>

<h3 id="msg">Sell your item</h3>
<EditForm model="Item" id="CreateForm" method="post" OnValidSubmit="() => HandleSubmitAsync()" FormName="create" Enhance>
    <DataAnnotationsValidator />
    <ValidationSummary role="alert" />
    <div id="NameDiv">
        <label for="ItemName">Enter name:</label>
        <InputText id="ItemName" @bind-Value="Item.ItemName"></InputText>
        <ValidationMessage For="() => Item.ItemName"></ValidationMessage>
    </div>
    <div id="DescriptionDiv">
        <label for="Description">Enter descrription:</label>
        <InputText id="Descrription" @bind-Value="Item.Description"></InputText>
    </div>
    <div id="PriceDiv">
        <label for="Price">Price:</label>
        <InputNumber @bind-Value="Item.Price" id="Price" min="0"></InputNumber>
        <ValidationMessage For="() => Item.Price" />
    </div>
    <div id="TypeDiv">
        <label for="type">Pick item type:</label>
        <InputRadioGroup id="type" @bind-Value="Item.ItemType" TValue="string">
            <label><InputRadio Value="t_shirt" TValue="string" /> T-Shirt</label><br />
            <label><InputRadio Value="Card" TValue="string" /> Card</label><br />
        </InputRadioGroup>
        <ValidationMessage For="() => Item.ItemType" />
    </div>
    <div id="RarityDiv">
        <label for="Rarity">Pick item rarity:</label>
        <InputSelect id="Rarity" @bind-Value="Item.Rarity">
            <option value="common">Common</option>
            <option value="rare">Rare</option>
            <option value="epic">Epic</option>
            <option value="legendary">Legendary</option>
        </InputSelect>
        <ValidationMessage For="() => Item.Rarity" />
    </div>
    <div id="quanDiv">
        <label for="quan">How many items do you want to sell?</label>
        <InputNumber @bind-Value="Item.Quantity" id="quan" min="1">
        </InputNumber>
        <ValidationMessage For="() => Item.Quantity" />
    </div>
    <div id="NameDiv">
        <label for="imgURL">Provide a URL with an image of your item:</label>
        <InputText id="imgURL" @bind-Value="Item.ImageUrl"></InputText>
    </div>
    <button type="submit">Create</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private TradeItems Item { get; set; } = new();
    private string Card = "Card";
    private string t_shirt = "T-shirt";

    private async Task HandleSubmitAsync() {
        await DbService.CreateItem(Item);
        Navigation.NavigateTo("/test");
    }
}
